@online{twitter_sentiment,
  author = {Rosa Filgueira},
  title = {Twitter Sentiment Analysis},
  year = 2016,
  url = {https://github.com/rosafilgueira/dispel4py_workflows/tree/master/twitter_sentiment},
  urldate = {2016-06-15}
}
@online{cross_correlation,
  author = {Rosa Filgueira},
  title = {Cross-Correlation},
  year = 2016,
  url = {https://github.com/rosafilgueira/dispel4py_workflows/tree/master/tc_cross_correlation},
  urldate = {2016-06-15}
}
@online{internal_extinction,
  author = {Rosa Filgueira},
  title = {Internal Extinction of Galaxies},
  year = 2016,
  url = {https://github.com/rosafilgueira/dispel4py_workflows/tree/master/internal_extinction},
  urldate = {2016-07-04}
}
@article{doi:10.1177/1094342016649766,
author = {Rosa Filguiera and Amrey Krause and Malcolm Atkinson and Iraklis Klampanos and Alexander Moreno},
title = {dispel4py: A Python framework for data-intensive scientific computing},
journal = {The International Journal of High Performance Computing Applications},
volume = {31},
number = {4},
pages = {316-334},
year = {2017},
doi = {10.1177/1094342016649766},

URL = { 
        http://dx.doi.org/10.1177/1094342016649766
    
},
eprint = { 
        http://dx.doi.org/10.1177/1094342016649766
    
}
,
    abstract = { This paper presents dispel4py, a new Python framework for describing abstract stream-based workflows for distributed data-intensive applications. These combine the familiarity of Python programming with the scalability of workflows. Data streaming is used to gain performance, rapid prototyping and applicability to live observations. dispel4py enables scientists to focus on their scientific goals, avoiding distracting details and retaining flexibility over the computing infrastructure they use. The implementation, therefore, has to map dispel4py abstract workflows optimally onto target platforms chosen dynamically. We present four dispel4py mappings: Apache Storm, message-passing interface (MPI), multi-threading and sequential, showing two major benefits: a) smooth transitions from local development on a laptop to scalable execution for production work, and b) scalable enactment on significantly different distributed computing infrastructures. Three application domains are reported and measurements on multiple infrastructures show the optimisations achieved; they have provided demanding real applications and helped us develop effective training. The dispel4py.org is an open-source project to which we invite participation. The effective mapping of dispel4py onto multiple target infrastructures demonstrates exploitation of data-intensive and high-performance computing (HPC) architectures and consistent scalability. }
}

@misc{apache_spark,
  title = {{Apache Spark™; - Lightning-Fast Cluster Computing}},
  howpublished = {\url{http://spark.apache.org/}},
}
@misc{apache_storm,
  title = {{Apache Storm}},
  howpublished = {\url{http://storm.apache.org/} (Jul. 2017)},
}
@misc{MPI_forum,
  title = {{MPI Forum}},
  howpublished = {\url{http://mpi-forum.org/} (Jul. 2017)},
}
@misc{MPI-3.0,
  author={{Message Passing Interface Forum}},
  title={{\textsf{MPI}: A Message-Passing Interface Standard. Version 3.0}},
  note={available at: \url{http://mpi-forum.org/docs/mpi-3.0/mpi30-report.pdf} (Jul. 2017)},
  month={September 21st},
  year={2012},
}
@article{deelman2015pegasus,
  title={Pegasus, a workflow management system for science automation},
  author={Deelman, Ewa and Vahi, Karan and Juve, Gideon and Rynge, Mats and Callaghan, Scott and Maechling, Philip J and Mayani, Rajiv and Chen, Weiwei and da Silva, Rafael Ferreira and Livny, Miron and others},
  journal={Future Generation Computer Systems},
  volume={46},
  pages={17--35},
  year={2015},
  publisher={Elsevier}
}
@article{ludascher2006scientific,
  title={Scientific workflow management and the {K}epler system},
  author={Lud{\"a}scher, Bertram and Altintas, Ilkay and Berkley, Chad and Higgins, Dan and Jaeger, Efrat and Jones, Matthew and Lee, Edward A and Tao, Jing and Zhao, Yang},
  journal={Concurrency and Computation: Practice and Experience},
  volume={18},
  number={10},
  pages={1039--1065},
  year={2006},
  publisher={Wiley Online Library}
}
@article{teylo2017hybrid,
title = "A hybrid evolutionary algorithm for task scheduling and data assignment of data-intensive scientific workflows on clouds",
journal = "Future Generation Computer Systems",
volume = "76",
number = "",
pages = "1 - 17",
year = "2017",
note = "",
issn = "0167-739X",
doi = "http://dx.doi.org/10.1016/j.future.2017.05.017",
url = "http://www.sciencedirect.com/science/article/pii/S0167739X17309883",
author = "Luan Teylo and Ubiratam de Paula and Yuri Frota and Daniel de Oliveira and Lúcia M.A. Drummond",
keywords = "Clouds",
keywords = "Combinatorial optimization",
keywords = "Task scheduling",
keywords = "Data assignment",
keywords = "Hybrid evolutionary algorithm",
abstract = "A growing number of data- and compute-intensive experiments have been modeled as scientific workflows in the last decade. Meanwhile, clouds have emerged as a prominent environment to execute this type of workflows. In this scenario, the investigation of workflow scheduling strategies, aiming at reducing its execution times, became a top priority and a very popular research field. However, few work consider the problem of data file assignment when solving the task scheduling problem. Usually, a workflow is represented by a graph where nodes represent tasks and the scheduling problem consists in allocating tasks to machines to be executed at a predefined time aiming at reducing the makespan of the whole workflow. In this article, we show that the scheduling of scientific workflows can be improved when both task scheduling and the data file assignment problems are treated together. Thus, we propose a new workflow representation, where nodes of the workflow graph represent either tasks or data files, and define the Task Scheduling and Data Assignment Problem (TaSDAP), considering this new model. We formulated this problem as an integer programming problem. Moreover, a hybrid evolutionary algorithm for solving it, named HEA-TaSDAP, is also introduced. To evaluate our approach we conducted two types of experiments: theoretical and practical ones. At first, we compared HEA-TaSDAP with the solutions produced by the mathematical formulation and by other works from related literature. Then, we considered real executions in Amazon EC2 cloud using a real scientific workflow use case (SciPhy for phylogenetic analyses). In all experiments, HEA-TaSDAP outperformed the other classical approaches from the related literature, such as Min–Min and HEFT."
}
@book{hey2009fourth,
  title={The fourth paradigm: data-intensive scientific discovery},
  author={Hey, Tony and Tansley, Stewart and Tolle, Kristin M and others},
  volume={1},
  year={2009},
  publisher={Microsoft research Redmond, WA}
}
